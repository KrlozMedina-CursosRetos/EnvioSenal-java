
import java.io.*;
import java.util.*;
import javax.swing.Timer;
/**
 *
 * @author DAPT
 */
public class envio extends javax.swing.JFrame {
private ArrayList listeners;
     WriterPort  emisor;
     ReaderPort  reader;
     String a ="";
     Timer reloj;
     String dato=null,datos,datos2;
     int valor = 0;
     
    public envio() {
        initComponents();
        reloj= new Timer (100,new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                EVENTO_RELOJ(evt);
                }
        });

        this.emisor= WriterPort.getInstance();
        this.reader = ReaderPort.getInstance();
        this.reader.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ActionEventPort actionEventPort = (ActionEventPort)evt;
                portReadData(actionEventPort);
            }
        }
        );
        barra.setValue(1);
          
        }

  public void  EVENTO_RELOJ(java.awt.event.ActionEvent evt){
      int conta=0;
        conta++;
        if( conta==1){
            try {
        String datos;
        datos = String.valueOf(valor);
        this.emisor.escribir('('+datos +')');
        }
        catch(IOException iOException){
        } }
        else{
           conta=0;
        } }
      public void portReadData(ActionEventPort actionEventPort){

        a+=actionEventPort.getReaded();
        //area1.setText(area1.getText() + a  + "\n");
        int flagi=0, flagf=0;
        int l= a.length();
        for (int i=0; i<l;i++){
            char q = a.charAt(i);
            if (q=='#'){flagi=1;}
            if (q=='%'){flagf=1;}
            if ( (flagi==1)&&(flagf==1))
            { dato = a.substring(1,l-1); }
        }
         
        if(dato.equals("dentro")){
           texto3.setText("valor dentro del rango");
               }
        if(dato.equals("fuera")){
            texto3.setText("valor fuera de rango");
        }
        
       dato="";
       a="";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        texto = new javax.swing.JLabel();
        texto2 = new javax.swing.JLabel();
        caja1 = new javax.swing.JTextField();
        caja2 = new javax.swing.JTextField();
        barra = new javax.swing.JScrollBar();
        enviar = new javax.swing.JButton();
        caja3 = new javax.swing.JTextField();
        texto3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        texto.setText("Limite maximo");
        getContentPane().add(texto);
        texto.setBounds(10, 30, 80, 20);

        texto2.setText("Limite minimo");
        getContentPane().add(texto2);
        texto2.setBounds(10, 60, 80, 30);

        caja1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caja1ActionPerformed(evt);
            }
        });
        getContentPane().add(caja1);
        caja1.setBounds(90, 20, 100, 30);

        caja2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caja2ActionPerformed(evt);
            }
        });
        getContentPane().add(caja2);
        caja2.setBounds(90, 60, 100, 30);

        barra.setBlockIncrement(1);
        barra.setMaximum(150);
        barra.setMinimum(-150);
        barra.setVisibleAmount(0);
        barra.setDoubleBuffered(true);
        barra.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                barraAdjustmentValueChanged(evt);
            }
        });
        getContentPane().add(barra);
        barra.setBounds(300, 10, 20, 210);

        enviar.setText("enviar");
        enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });
        getContentPane().add(enviar);
        enviar.setBounds(200, 40, 90, 30);

        caja3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caja3ActionPerformed(evt);
            }
        });
        getContentPane().add(caja3);
        caja3.setBounds(20, 160, 250, 60);
        getContentPane().add(texto3);
        texto3.setBounds(10, 110, 260, 30);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-348)/2, (screenSize.height-268)/2, 348, 268);
    }// </editor-fold>//GEN-END:initComponents

    private void caja1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caja1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_caja1ActionPerformed

    private void caja2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caja2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_caja2ActionPerformed

    private void barraAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_barraAdjustmentValueChanged
int valorbarra=0;
        
        valorbarra = barra.getValue();
        valor=valorbarra;
        valorbarra = valorbarra*-1;
        caja3.setText(String.valueOf(valorbarra));
        

        // TODO add your handling code here:
}//GEN-LAST:event_barraAdjustmentValueChanged

    private void enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed
        this.reloj.start();

        datos = caja1.getText();
        datos2 = caja2.getText();

      
        int o,u;
        o =Integer.parseInt(datos);
        u = Integer.parseInt(datos2);

        if (o<u){
         caja3.setText("limite fuera de rango");

        }else
            try {
       int limi;
       //limi = Integer.parseInt(datos2);
       
        this.emisor.escribir('+'+datos+'&' + '*'+datos2+'/'+"@del#");

        }
        catch(IOException iOException){
        }
}//GEN-LAST:event_enviarActionPerformed

    private void caja3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caja3ActionPerformed
   
        

        // TODO add your handling code here:
}//GEN-LAST:event_caja3ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new envio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollBar barra;
    private javax.swing.JTextField caja1;
    private javax.swing.JTextField caja2;
    private javax.swing.JTextField caja3;
    private javax.swing.JButton enviar;
    private javax.swing.JLabel texto;
    private javax.swing.JLabel texto2;
    private javax.swing.JLabel texto3;
    // End of variables declaration//GEN-END:variables

}
